using System;
using System.Collections.Generic;
using System.Reflection;
using System.Text;
using System.Linq;

namespace Nullify.Configuration
{
    internal class CreationPolicy
    {
        /// <summary>
        /// Name of the policy. Used for the generated class Name as well as for pre-registration.
        /// </summary>
        public string Name { get; set; }
        /// <summary>
        /// Target Type for this policy.
        /// </summary>
        public Type Target { get; private set; }

        public IList<CreationPolicy> NestedPolicies { get; private set; }

        public string AutoGeneratedClassName
        {
            get
            {
                var builder = new StringBuilder();
                builder.Append("NullOf");
                builder.Append(Target.Name);
                builder.Append("Named");
                builder.Append(Name);
                return builder.ToString();
            }
        }

        /// <summary>
        /// Configured Return values for Getters/Functions
        /// </summary>
        public Dictionary<MemberInfo, object> ReturnValues { get; private set; }

        public CreationPolicy(Type target)
        {
            Target = target;
            ReturnValues = new Dictionary<MemberInfo, object>();
            NestedPolicies = new List<CreationPolicy>();
            Name = new Random().Next().ToString();
        }

        public CreationPolicy Search(Type childType)
        {
            var policy = NestedPolicies.FirstOrDefault(t => t.Target == childType);
            if (policy == null)
                policy = new CreationPolicy(childType);

            policy.Name = "NullOf" + childType.Name + "dep" + AutoGeneratedClassName;
            return policy;
        }
    }
}
